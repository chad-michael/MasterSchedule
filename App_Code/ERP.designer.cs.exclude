#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ERP")]
public partial class ERPDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBio(Bio instance);
  partial void UpdateBio(Bio instance);
  partial void DeleteBio(Bio instance);
  partial void InsertUName(UName instance);
  partial void UpdateUName(UName instance);
  partial void DeleteUName(UName instance);
  #endregion
	
	public ERPDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ERPConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ERPDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ERPDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ERPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ERPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Bio> Bios
	{
		get
		{
			return this.GetTable<Bio>();
		}
	}
	
	public System.Data.Linq.Table<UName> UNames
	{
		get
		{
			return this.GetTable<UName>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bios")]
public partial class Bio : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDNO;
	
	private string _FirstNM;
	
	private string _LastNM;
	
	private string _Type;
	
	private string _Gender;
	
	private string _HomeAddress;
	
	private string _HomeZIP;
	
	private string _HomePhone;
	
	private EntityRef<UName> _UName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNOChanging(int value);
    partial void OnIDNOChanged();
    partial void OnFirstNMChanging(string value);
    partial void OnFirstNMChanged();
    partial void OnLastNMChanging(string value);
    partial void OnLastNMChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnHomeZIPChanging(string value);
    partial void OnHomeZIPChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    #endregion
	
	public Bio()
	{
		this._UName = default(EntityRef<UName>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDNO
	{
		get
		{
			return this._IDNO;
		}
		set
		{
			if ((this._IDNO != value))
			{
				this.OnIDNOChanging(value);
				this.SendPropertyChanging();
				this._IDNO = value;
				this.SendPropertyChanged("IDNO");
				this.OnIDNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNM", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string FirstNM
	{
		get
		{
			return this._FirstNM;
		}
		set
		{
			if ((this._FirstNM != value))
			{
				this.OnFirstNMChanging(value);
				this.SendPropertyChanging();
				this._FirstNM = value;
				this.SendPropertyChanged("FirstNM");
				this.OnFirstNMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNM", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string LastNM
	{
		get
		{
			return this._LastNM;
		}
		set
		{
			if ((this._LastNM != value))
			{
				this.OnLastNMChanging(value);
				this.SendPropertyChanging();
				this._LastNM = value;
				this.SendPropertyChanged("LastNM");
				this.OnLastNMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(5)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(5)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(50)")]
	public string HomeAddress
	{
		get
		{
			return this._HomeAddress;
		}
		set
		{
			if ((this._HomeAddress != value))
			{
				this.OnHomeAddressChanging(value);
				this.SendPropertyChanging();
				this._HomeAddress = value;
				this.SendPropertyChanged("HomeAddress");
				this.OnHomeAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeZIP", DbType="NVarChar(5)")]
	public string HomeZIP
	{
		get
		{
			return this._HomeZIP;
		}
		set
		{
			if ((this._HomeZIP != value))
			{
				this.OnHomeZIPChanging(value);
				this.SendPropertyChanging();
				this._HomeZIP = value;
				this.SendPropertyChanged("HomeZIP");
				this.OnHomeZIPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
	public string HomePhone
	{
		get
		{
			return this._HomePhone;
		}
		set
		{
			if ((this._HomePhone != value))
			{
				this.OnHomePhoneChanging(value);
				this.SendPropertyChanging();
				this._HomePhone = value;
				this.SendPropertyChanged("HomePhone");
				this.OnHomePhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bio_UName", Storage="_UName", ThisKey="IDNO", OtherKey="IDNO", IsUnique=true, IsForeignKey=false)]
	public UName UName
	{
		get
		{
			return this._UName.Entity;
		}
		set
		{
			UName previousValue = this._UName.Entity;
			if (((previousValue != value) 
						|| (this._UName.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UName.Entity = null;
					previousValue.Bio = null;
				}
				this._UName.Entity = value;
				if ((value != null))
				{
					value.Bio = this;
				}
				this.SendPropertyChanged("UName");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UNames")]
public partial class UName : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDNO;
	
	private string _Usernames;
	
	private string _DeltaEmail;
	
	private EntityRef<Bio> _Bio;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNOChanging(int value);
    partial void OnIDNOChanged();
    partial void OnUsernamesChanging(string value);
    partial void OnUsernamesChanged();
    partial void OnDeltaEmailChanging(string value);
    partial void OnDeltaEmailChanged();
    #endregion
	
	public UName()
	{
		this._Bio = default(EntityRef<Bio>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNO", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDNO
	{
		get
		{
			return this._IDNO;
		}
		set
		{
			if ((this._IDNO != value))
			{
				if (this._Bio.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDNOChanging(value);
				this.SendPropertyChanging();
				this._IDNO = value;
				this.SendPropertyChanged("IDNO");
				this.OnIDNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usernames", DbType="NVarChar(32)")]
	public string Usernames
	{
		get
		{
			return this._Usernames;
		}
		set
		{
			if ((this._Usernames != value))
			{
				this.OnUsernamesChanging(value);
				this.SendPropertyChanging();
				this._Usernames = value;
				this.SendPropertyChanged("Usernames");
				this.OnUsernamesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaEmail", DbType="NVarChar(50)")]
	public string DeltaEmail
	{
		get
		{
			return this._DeltaEmail;
		}
		set
		{
			if ((this._DeltaEmail != value))
			{
				this.OnDeltaEmailChanging(value);
				this.SendPropertyChanging();
				this._DeltaEmail = value;
				this.SendPropertyChanged("DeltaEmail");
				this.OnDeltaEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bio_UName", Storage="_Bio", ThisKey="IDNO", OtherKey="IDNO", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public Bio Bio
	{
		get
		{
			return this._Bio.Entity;
		}
		set
		{
			Bio previousValue = this._Bio.Entity;
			if (((previousValue != value) 
						|| (this._Bio.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Bio.Entity = null;
					previousValue.UName = null;
				}
				this._Bio.Entity = value;
				if ((value != null))
				{
					value.UName = this;
					this._IDNO = value.IDNO;
				}
				else
				{
					this._IDNO = default(int);
				}
				this.SendPropertyChanged("Bio");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
